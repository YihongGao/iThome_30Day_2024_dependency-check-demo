name: 'CI pipeline for build jar'

on:
  push:
    branches: [ "develop", "main" ]

permissions:
  contents: read
  packages: write

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Test
        run: ./mvnw clean test

  dependency-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      # 找 ~/.m2/repository 有沒有 cache，避免每次都要下載 CVE database
      - name: Restore cached m2-repository
        id: cache-m2-repository-restore
        uses: actions/cache/restore@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-m2-repository-${{ hashFiles('**/pom.xml') }}
      # 如果沒有 cache，就下載 CVE database
      - name: Download CVE database
        if: steps.cache-m2-repository-restore.outputs.cache-hit != 'true'
        run: ./mvnw dependency-check:update-only -DnvdApiKey=${{ secrets.NVD_API_KEY }}
      # 儲存 m2-repository，包含 dependency-check cve database
      - name: Save m2-repository(including dependency-check cve database)
        id: cache-m2-repository-save
        uses: actions/cache/save@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-m2-repository-${{ hashFiles('**/pom.xml') }}
      # 執行 dependency-check 分析弱點，若有弱點分數大於 8，則建構失敗
      - name: Analysis
        run: ./mvnw verify -DfailBuildOnCVSS=8
      # 若建構失敗，則上傳 dependency-check report
      - name: upload reports
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: reports
          path: |
            **/target/dependency-check-report.html

  build-jar:
    runs-on: ubuntu-latest
    needs: [ test, dependency-check ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Build with Maven
        run: ./mvnw clean package
      - name: Upload the Jar
        uses: actions/upload-artifact@v4
        with:
          name: artifact
          path: target/*.jar
