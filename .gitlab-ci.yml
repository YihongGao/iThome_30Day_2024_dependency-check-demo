stages:
  - compile
  - build
  - push

variables:
  IMAGE_NAME: ithome-app-backend
  CI_IMAGE: $CI_REGISTRY_IMAGE/$IMAGE_NAME:$CI_COMMIT_SHORT_SHA

compile:
  stage: compile
  image: maven:3.9.4-eclipse-temurin-17-alpine
  script:
    - ./mvnw clean package
  artifacts:
    paths:
      - target/*.jar

build:
  stage: build
  image: docker:24.0.6
  services:
    - docker:dind
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - ls -ltr target
    - docker build -t $CI_REGISTRY_IMAGE/$IMAGE_NAME:$CI_COMMIT_SHORT_SHA .
    - docker push $CI_REGISTRY_IMAGE/$IMAGE_NAME:$CI_COMMIT_SHORT_SHA
  dependencies:
    - compile


push:
  stage: push
  image: docker:24.0.6
  services:
    - docker:dind
  before_script:
    - apk add --no-cache python3 py3-pip
    - pip3 install --no-cache-dir awscli
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $ECR_REGISTRTY
  script:
    - docker pull $CI_REGISTRY_IMAGE/$IMAGE_NAME:$CI_COMMIT_SHORT_SHA
    - docker image ls
    - docker tag $CI_REGISTRY_IMAGE/$IMAGE_NAME:$CI_COMMIT_SHORT_SHA $ECR_REGISTRTY:$CI_COMMIT_SHORT_SHA
    - docker push $ECR_REGISTRTY:$CI_COMMIT_SHORT_SHA
  dependencies:
    - build
  only:
    - develop
    - /^[a-z]*[-]?v[0-9\.]+$/
    - staging